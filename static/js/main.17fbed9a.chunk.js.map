{"version":3,"sources":["components/form/FormInputErrorMessage.js","components/form/FormContainer.js","components/form/FormInputPassword.js","components/buttons/ButtonContainer.js","components/buttons/Button.js","api/Api.js","services/AuthService.js","components/auth/RegistrationView.js","actions/type.js","components/auth/LoginView.js","actions/auth.js","components/transaction/TransactionForm.js","services/auth-header.js","components/transaction/TransactionController.js","components/transaction/NewTransactionView.js","components/transaction/EditTransactionView.js","components/pagination/Pagination.js","components/utils/CurrencySymbols.js","components/transaction/Transaction.js","components/transaction/TransactionsNotFound.js","components/transaction/TransactionList.js","components/transaction/TransactionListSummary.js","components/transaction/filter/TransactionTypeFilter.js","components/transaction/filter/TransactionFilterContainer.js","components/transaction/filter/TransactionDescriptionFilter.js","components/transaction/filter/TransactionFilter.js","components/transaction/TransactionListHeader.js","components/dashboard/Dashboard.js","components/profile/Profile.js","images/home.svg","components/home/HomeView.js","components/auth/PrivateRoute.js","components/navigation/LogoutButton.js","components/navigation/NavigationBar.js","App.js","reportWebVitals.js","reducers/auth.js","reducers/index.js","store.js","index.js"],"names":["Container","styled","div","FormInputErrorMessage","props","message","FormContainer","FormContainerCentered","FormContainerAuth","FormContainerTransaction","I","i","FormInputPassword","reference","useState","passwordVisible","setPasswordVisible","eyeIcon","icon","faEyeSlash","faEye","Form","Control","type","name","id","placeholder","ref","onClick","ButtonContainerTransactionType","ButtonContainerForm","plusIcon","faPlus","arrowLeftIcon","faAngleLeft","arrowRightIcon","faAngleRight","Button","button","width","marginRight","ButtonPrimary","ButtonSecondary","ButtonPrimaryRound","ButtonTransactionType","isCurrent","ButtonAddTransaction","ButtonPagination","ButtonArrowLeft","disabled","ButtonArrowRight","ButtonPageNumber","current","API_URL","login","username","password","fetch","method","headers","body","JSON","stringify","logout","localStorage","removeItem","signup","email","getCurrentUser","parse","getItem","CustomLink","Link","ContainerFlex","RegistrationView","useForm","register","handleSubmit","errors","submitting","setSubmitting","registrationSuccessful","setRegistrationSuccessful","invalidCredentials","setInvalidCredentials","showAlert","setShowAlert","alertMessage","setAlertMessage","isLoggedIn","useSelector","state","auth","onSubmit","formData","a","console","log","AuthService","then","response","json","data","status","error","to","className","Alert","variant","onClose","dismissible","Group","Label","htmlFor","required","pattern","value","SIGNUP_SUCCESS","SIGNUP_FAILURE","SIGNIN_SUCCESS","SIGNIN_FAILURE","LOGOUT","LoginView","dispatch","useDispatch","history","useHistory","from","useLocation","pathname","ok","accessToken","setItem","payload","user","replace","TransactionForm","transaction","dataLoading","submitButtonText","Spinner","animation","role","defaultValue","description","date","amount","as","push","authHeader","Authorization","fetchTransactions","fetchTransactionById","putTransaction","postTransaction","deleteTransaction","NewTransactionView","redirect","setRedirect","errorMessage","alertVisible","setAlertVisible","userId","currency","Date","toISOString","slice","setTransaction","useParams","loading","setLoading","setErrorMessage","useEffect","fetchTransaction","Pagination","elementsPerPage","totalElements","currentPage","paginate","pageUp","pageDown","reset","pageNumbers","Math","ceil","map","number","length","CurrencySymbols","USD","EUR","CRC","GBP","ILS","INR","JPY","KRW","NGN","PHP","PLN","PYG","THB","UAH","VND","EditIcon","DeleteIcon","Description","p","CurrencyAndAmount","transactionType","Item","ItemGrow","Transaction","onRemove","editIcon","onEdit","faPen","deleteIcon","faTrash","substring","undefined","TransactionsNotFound","TransactionList","transactions","setCurrentPage","transactionsPerPage","indexOfLastTransaction","indexOfFirstTransaction","currentTransactions","tr","pageNumber","ItemLeft","ItemRight","Title","Amount","TransactionListSummary","setState","expenseSum","incomeSum","balance","abs","TransactionTypeFilter","setType","TransactionFilterContainer","TransactionFilterItem","form","Input","input","TransactionDescriptionFilter","setDescription","onChange","event","target","TransactionFilter","filterParams","setFilterParams","Header","h1","TransactionListHeader","Dashboard","setTransactions","filteredTransactions","setFilteredTransactions","transactionsLoading","setTransactionsLoading","filter","toLowerCase","includes","UserProfileDataContainer","UserProfileData","Value","Profile","currentUser","setCurrentUser","Content","ButtonContainer","HomeImg","img","HomeView","src","home","alt","PrivateRoute","children","userAuthenticated","rest","render","location","LogoutButton","MenuItem","NavigationBar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"qTAEMA,EAAYC,IAAOC,IAAV,sFAMA,SAASC,EAAsBC,GAC5C,OACE,cAACJ,EAAD,UACE,4BAAII,EAAMC,YCThB,I,QAAMC,EAAgBL,IAAOC,IAAV,+HAQbK,EAAwBN,YAAOK,EAAPL,CAAH,4PAcrBO,EAAoBP,YAAOM,EAAPN,CAAH,gEAKjBQ,EAA2BR,YAAOM,EAAPN,CAAH,gE,gBCvBxBS,EAAIT,IAAOU,EAAV,kIAQDX,EAAYC,IAAOC,IAAV,oGAMA,SAASU,EAAT,GAA2C,IAAdC,EAAa,EAAbA,UAAa,EACTC,oBAAS,GADA,mBAChDC,EADgD,KAC/BC,EAD+B,KAGjDC,EACJ,cAAC,IAAD,CAAiBC,KAAMH,EAAkBI,IAAaC,MAOxD,OACE,eAAC,EAAD,WACE,cAACC,EAAA,EAAKC,QAAN,CACEC,KAAMR,EAAkB,OAAS,WACjCS,KAAK,WACLC,GAAG,WACHC,YAAY,iBACZC,IAAKd,IAEP,cAACH,EAAD,CAAGkB,QAb0B,WAC/BZ,GAAmBD,IAYjB,SAAuCE,OCtC7C,I,kBAAMY,EAAiC5B,IAAOC,IAAV,2GAM9B4B,EAAsB7B,IAAOC,IAAV,0HCAnB6B,EAAW,cAAC,IAAD,CAAiBb,KAAMc,MAClCC,EAAgB,cAAC,IAAD,CAAiBf,KAAMgB,MACvCC,EAAiB,cAAC,IAAD,CAAiBjB,KAAMkB,MAExCC,EAASpC,IAAOqC,OAAV,oPAUD,SAAClC,GAAD,OAAWA,EAAMmC,SACV,SAACnC,GAAD,OAAWA,EAAMoC,eAG7BC,EAAgBxC,YAAOoC,EAAPpC,CAAH,8HAQbyC,GAAkBzC,YAAOoC,EAAPpC,CAAH,kGAMf0C,GAAqB1C,YAAOwC,EAAPxC,CAAH,4OAclB2C,GAAwB3C,IAAOqC,OAAV,6GAIX,SAAClC,GAAD,OAAYA,EAAMyC,UAAY,UAAY,WAGpDC,GAAuB,WAC3B,OAAO,cAACH,GAAD,UAAqBZ,KAGxBgB,GAAmB9C,IAAOqC,OAAV,sJAQhBU,GAAkB,SAAC,GAA2B,IAAzBpB,EAAwB,EAAxBA,QAASqB,EAAe,EAAfA,SAClC,OACE,cAACF,GAAD,CAAkBnB,QAASA,EAASqB,SAAUA,EAA9C,SACGhB,KAKDiB,GAAmB,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,QAASqB,EAAe,EAAfA,SACnC,OACE,cAACF,GAAD,CAAkBnB,QAASA,EAASqB,SAAUA,EAA9C,SACGd,KAKDgB,GAAmBlD,YAAO8C,GAAP9C,CAAH,+DACN,SAACG,GAAD,OAAYA,EAAMgD,QAAU,UAAY,aAC7C,SAAChD,GAAD,OAAYA,EAAMgD,QAAU,UAAY,a,SC1FtCC,GAAU,oDCsCR,O,uCApCbC,MAAQ,SAACC,EAAUC,GACjB,OAAOC,MAAMJ,GAAU,eAAgB,CACrCK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBP,SAAUA,EACVC,SAAUA,O,KAKhBO,OAAS,WACPC,aAAaC,WAAW,S,KAG1BC,OAAS,SAACX,EAAUY,EAAOX,GACzB,OAAOC,MAAMJ,GAAU,eAAgB,CACrCK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBP,SAAUA,EACVC,SAAUA,EACVW,MAAOA,O,KAKbC,eAAiB,WACf,OAAOP,KAAKQ,MAAML,aAAaM,QAAQ,W,kBCnBrCC,GAAatE,YAAOuE,IAAPvE,CAAH,2IAUVwE,GAAgBxE,IAAOC,IAAV,oHAOJ,SAASwE,KAAoB,IAAD,EACEC,cAAnCC,EADiC,EACjCA,SAAUC,EADuB,EACvBA,aAAcC,EADS,EACTA,OADS,EAELhE,oBAAS,GAFJ,mBAElCiE,EAFkC,KAEtBC,EAFsB,OAGmBlE,oBAAS,GAH5B,mBAGlCmE,EAHkC,KAGVC,EAHU,OAIWpE,oBAAS,GAJpB,mBAIlCqE,EAJkC,KAIdC,EAJc,OAKPtE,oBAAS,GALF,mBAKlCuE,EALkC,KAKvBC,EALuB,OAMDxE,mBAAS,IANR,mBAMlCyE,EANkC,KAMpBC,EANoB,KAOnCC,EAAaC,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAE/CI,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACff,GAAc,GACdgB,QAAQC,IAAIH,GAFG,SAITI,GAAYhC,OAChB4B,EAASvC,SACTuC,EAAS3B,MACT2B,EAAStC,UACT2C,MACA,SAACC,GAAD,OACEA,EAASC,OAAOF,MAAK,SAACG,GACpBN,QAAQC,IAAIK,EAAKjG,SACb+F,EAASG,QAA8B,MAApBH,EAASG,QAC9BnB,GAAsB,GACtBE,GAAa,GACbE,EAAgBc,EAAKjG,UAErB6E,GAA0B,SAGhC,SAACsB,GACCR,QAAQC,IAAIO,MArBD,OAyBfxB,GAAc,GAzBC,2CAAH,sDA4Bd,OAAIC,EACK,cAAC,IAAD,CAAUwB,GAAG,WAIpB,eAACjG,EAAD,WACGiF,GAAc,cAAC,IAAD,CAAUgB,GAAI,eAC7B,oBAAIC,UAAU,wBAAd,4BACCvB,GAAsBE,GACrB,cAACsB,GAAA,EAAD,CACEC,QAAS,SACTC,QAAS,kBAAMvB,GAAa,IAC5BwB,aAAW,EAHb,SAKGvB,IAIL,eAAClE,EAAA,EAAD,CAAMwE,SAAUhB,EAAagB,GAA7B,UACE,eAACxE,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,WAApB,sBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,YAAY,iBACZC,IAAKiD,EAAS,CACZsC,SAAU,qCAGbpC,EAAOvB,SACN,cAACpD,EAAD,CAAuBE,QAASyE,EAAOvB,SAASlD,UAC9C,QAGN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,QAApB,mBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,YAAY,cACZC,IAAKiD,EAAS,CACZsC,SAAU,8BACVC,QAAS,CACPC,MAAO,2CACP/G,QAAS,6BAIdyE,EAAOX,MACN,cAAChE,EAAD,CAAuBE,QAASyE,EAAOX,MAAM9D,UAC3C,QAGN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,WAApB,sBACA,cAACrG,EAAD,CACEC,UAAW+D,EAAS,CAClBsC,SAAU,qCAGbpC,EAAOtB,SACN,cAACrD,EAAD,CAAuBE,QAASyE,EAAOtB,SAASnD,UAC9C,QAGN,cAACyB,EAAD,UACE,cAACW,EAAD,CAAelB,KAAK,SAAS0B,SAAU8B,EAAYxC,MAAO,OAA1D,8BAKF,eAACkC,GAAD,WACE,6DACA,cAACF,GAAD,CAAYkC,GAAG,SAAf,6BCjJH,I,MAAMY,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAS,SCahBlD,GAAatE,YAAOuE,IAAPvE,CAAH,6IAUVwE,GAAgBxE,IAAOC,IAAV,sHAOJ,SAASwH,KAAa,IAAD,EACS/C,cAAnCC,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,aAAcC,EADE,EACFA,OADE,EAEEhE,oBAAS,GAFX,mBAE3BiE,EAF2B,KAEfC,EAFe,OAGkBlE,oBAAS,GAH3B,mBAG3BqE,EAH2B,KAGPC,EAHO,OAIAtE,oBAAS,GAJT,mBAI3BuE,EAJ2B,KAIhBC,EAJgB,KAK5BqC,EAAWC,eAEbC,EAAUC,cAERC,GADSC,cACSrC,OAAS,CAAEoC,KAAM,CAAEE,SAAU,OAA/CF,KACAtC,EAAaC,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cA4BrD,OACE,eAACjF,EAAD,WACGiF,GAAc,cAAC,IAAD,CAAUgB,GAAI,eAC7B,oBAAIC,UAAU,wBAAd,oBAECvB,GAAsBE,GACrB,cAACsB,GAAA,EAAD,CACEC,QAAS,SACTC,QAAS,kBAAMvB,GAAa,IAC5BwB,aAAW,EAHb,2CASF,eAACzF,EAAA,EAAD,CAAMwE,SAAUhB,GAzCA,SAACiB,GACnBd,GAAc,GACdM,GAAa,GACb,IACEqC,GC3BiBpE,ED2BDuC,EAASvC,SC3BEC,ED2BQsC,EAAStC,SC3BJ,SAACmE,GAC7C,OAAOzB,GAAY5C,MAAMC,EAAUC,GAAU2C,MAAK,SAACC,GAAD,OAChDA,EAASC,OAAOF,MAAK,SAACG,GAUpB,OATAN,QAAQC,IAAIG,GACPA,EAAS8B,IAGR5B,EAAK6B,aACPnE,aAAaoE,QAAQ,OAAQvE,KAAKC,UAAUwC,IAE9CqB,EAAS,CAAEpG,KAAMgG,GAAgBc,QAAS,CAAEC,KAAMhC,MALlDqB,EAAS,CAAEpG,KAAMiG,KAOZpB,WDegDD,MACrD,SAACC,GACMA,EAAS8B,IAIZlC,QAAQC,IAAI8B,EAAKE,UACK,MAAlBF,EAAKE,SACPJ,EAAQU,QAAQ,cAEhBV,EAAQU,QAAQR,KAPlB3C,GAAsB,GACtBE,GAAa,OAWnB,MAAOkB,GACPlB,GAAa,GAjBf,QAmBEN,GAAc,GC7CE,IAACzB,EAAUC,KDgE3B,UACE,eAACnC,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,WAApB,sBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,YAAY,iBACZC,IAAKiD,EAAS,CACZsC,SAAU,qCAGbpC,EAAOvB,SACN,cAACpD,EAAD,CAAuBE,QAASyE,EAAOvB,SAASlD,UAC9C,QAEN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,WAApB,sBACA,cAACrG,EAAD,CACEC,UAAW+D,EAAS,CAClBsC,SAAU,qCAGbpC,EAAOtB,SACN,cAACrD,EAAD,CAAuBE,QAASyE,EAAOtB,SAASnD,UAC9C,QAGN,cAACyB,EAAD,UACE,cAACW,EAAD,CAAelB,KAAK,SAAS0B,SAAU8B,EAAYxC,MAAO,OAA1D,sBAKF,eAAC,GAAD,WACE,+DACA,cAAC,GAAD,CAAYkE,GAAG,YAAf,wC,mBEjHK,SAAS+B,GAAT,GAMX,IALFC,EAKC,EALDA,YACA5C,EAIC,EAJDA,SACA6C,EAGC,EAHDA,YACA3D,EAEC,EAFDA,WACA4D,EACC,EADDA,iBAEMd,EAAUC,cADf,EAE0CnD,cAAnCC,EAFP,EAEOA,SAAUC,EAFjB,EAEiBA,aAAcC,EAF/B,EAE+BA,OAMhC,OACE,8BACGC,GAAc2D,EACb,cAACE,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMpC,UAAU,UAAhB,0BAGF,eAACrF,EAAA,EAAD,CAAMwE,SAAUhB,EAAagB,GAA7B,UACE,eAACxE,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,cAApB,yBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHC,YAAY,oBACZqH,aAAcN,EAAYO,YAC1BrH,IAAKiD,EAAS,CACZsC,SAAU,wCAGbpC,EAAOkE,YACN,cAAC7I,EAAD,CAAuBE,QAASyE,EAAOkE,YAAY3I,UACjD,QAGN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,OAApB,kBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,OACLC,KAAK,OACLC,GAAG,OACHsH,aAAcN,EAAYQ,KAC1BtH,IAAKiD,EAAS,CACZsC,SAAU,iCAGbpC,EAAOmE,KACN,cAAC9I,EAAD,CAAuBE,QAASyE,EAAOmE,KAAK5I,UAC1C,QAGN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,CAAYC,QAAQ,SAApB,oBACA,cAAC5F,EAAA,EAAKC,QAAN,CACEC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHsH,aAAcN,EAAYS,OAC1BxH,YAAY,eACZC,IAAKiD,EAAS,CACZsC,SAAU,mCAGbpC,EAAOoE,OACN,cAAC/I,EAAD,CAAuBE,QAASyE,EAAOoE,OAAO7I,UAC5C,QAGN,eAACgB,EAAA,EAAK0F,MAAN,WACE,cAAC1F,EAAA,EAAK2F,MAAN,mBACA,eAAC3F,EAAA,EAAKC,QAAN,CACE6H,GAAG,SACH3H,KAAK,OACLuH,aAAcN,EAAYlH,KAC1BG,YAAY,cACZC,IAAKiD,EAAS,CACZsC,SAAU,+BANd,UASE,4CACA,mDAIJ,eAACpF,EAAD,WACE,cAACW,EAAD,CAAelB,KAAK,SAASiB,YAAa,MAA1C,SACGmG,IAEH,cAACjG,GAAD,CAAiBd,QAlF3B,WACEiG,EAAQuB,KAAK,eAiFL,4BCtGG,SAASC,KACtB,IAAMf,EAAOzE,KAAKQ,MAAML,aAAaM,QAAQ,SAE7C,OAAIgE,GAAQA,EAAKH,YACR,CAAEmB,cAAe,UAAYhB,EAAKH,aAElC,GCHX,I,GAAMoB,GAAiB,uCAAG,8BAAAxD,EAAA,+DACEsD,KAAlBC,EADgB,EAChBA,cADgB,kBAEjB7F,MAAMJ,GAAU,mBAAoB,CACzCK,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB2F,cAAeA,MANK,2CAAH,qDAWjBE,GAAoB,uCAAG,WAAO/H,GAAP,iBAAAsE,EAAA,+DACDsD,KAAlBC,EADmB,EACnBA,cADmB,kBAEpB7F,MAAMJ,GAAU,iBAAmB5B,EAAI,CAC5CiC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB2F,cAAeA,MANQ,2CAAH,sDAWpBG,GAAc,uCAAG,WAAOhB,GAAP,iBAAA1C,EAAA,+DACKsD,KAAlBC,EADa,EACbA,cADa,kBAEd7F,MAAMJ,GAAU,iBAAmBoF,EAAYhH,GAAI,CACxDiC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB2F,cAAeA,GAEjB1F,KAAMC,KAAKC,UAAU2E,MARF,2CAAH,sDAYdiB,GAAe,uCAAG,WAAOjB,GAAP,iBAAA1C,EAAA,+DACIsD,KAAlBC,EADc,EACdA,cADc,SAET7F,MAAMJ,GAAU,gBAAiB,CAC5CK,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB2F,cAAeA,GAEjB1F,KAAMC,KAAKC,UAAU2E,KARD,mFAAH,sDAYfkB,GAAiB,uCAAG,WAAOlI,GAAP,iBAAAsE,EAAA,+DACEsD,KAAlBC,EADgB,EAChBA,cADgB,SAEX7F,MAAMJ,GAAU,iBAAmB5B,EAAI,CAClDiC,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB2F,cAAeA,KANK,mFAAH,sDCzCR,SAASM,KAAsB,IAAD,EACP9I,oBAAS,GADF,mBACpCiE,EADoC,KACxBC,EADwB,OAEXlE,oBAAS,GAFE,mBAEpC+I,EAFoC,KAE1BC,EAF0B,OAGHhJ,mBACtC,oDAJyC,mBAGpCiJ,EAHoC,aAMHjJ,oBAAS,IANN,mBAMpCkJ,EANoC,KAMtBC,EANsB,iDAQ3C,WAAwBxB,GAAxB,SAAA1C,EAAA,6DACEf,GAAc,GACdiF,GAAgB,GAChBxB,EAAYyB,OAAShE,GAAY9B,iBAAiB3C,GAClDgH,EAAY0B,SAAW,MAJzB,kBAO2BT,GAAgBjB,GAP3C,cAQkBP,GAGZ4B,GAAY,GAFZG,GAAgB,GATtB,kDAcIA,GAAgB,GAdpB,yBAgBIjF,GAAc,GAhBlB,8EAR2C,sBA4B3C,OACE,eAACvE,EAAD,WACGoJ,GAAY,cAAC,IAAD,CAAUpD,GAAG,eAE1B,iDAECsD,GAAgBC,GACf,cAACrD,GAAA,EAAD,CACEC,QAAS,SACTC,QAAS,kBAAMoD,GAAgB,IAC/BnD,aAAW,EAHb,SAKGiD,IAIL,cAACvB,GAAD,CACEC,YAAa,CAAEQ,MAAM,IAAImB,MAAOC,cAAcC,MAAM,EAAG,KACvDvF,WAAYA,EACZc,SA/CqC,4CAgDrC8C,iBAAkB,0BC9CX,SAASiB,KAAsB,IAAD,EACL9I,mBAAS,IADJ,mBACpC2H,EADoC,KACvB8B,EADuB,KAEnC9I,EAAO+I,cAAP/I,GAFmC,EAIbX,oBAAS,GAJI,mBAIpC2J,EAJoC,KAI3BC,EAJ2B,OAKP5J,oBAAS,GALF,mBAKpCiE,EALoC,KAKxBC,EALwB,OAMXlE,oBAAS,GANE,mBAMpC+I,EANoC,KAM1BC,EAN0B,OAOHhJ,mBAAS,0BAPN,mBAOpCiJ,EAPoC,KAOtBY,EAPsB,OAQH7J,oBAAS,GARN,mBAQpCkJ,EARoC,KAQtBC,EARsB,iDAU3C,WAAwBxB,GAAxB,SAAA1C,EAAA,6DACEf,GAAc,GACdiF,GAAgB,GAChBU,EAAgB,0BAChBlC,EAAYhH,GAAKA,EACjBgH,EAAYyB,OAAShE,GAAY9B,iBAAiB3C,GAClDgH,EAAY0B,SAAW,MANzB,kBAS2BV,GAAehB,GAT1C,cAUkBP,GAIZ4B,GAAY,IAHZG,GAAgB,GAChBU,EAAgB,iDAZtB,kDAiBIV,GAAgB,GAjBpB,yBAmBIjF,GAAc,GAnBlB,8EAV2C,sBAyD3C,OAxBA4F,qBAAU,WAAM,4CACd,8BAAA7E,EAAA,sEAEI2E,GAAW,GAFf,SAG2BlB,GAAqB/H,GAHhD,cAGU2E,EAHV,gBAIuBA,EAASC,OAJhC,OAIUC,EAJV,OAMSF,EAAS8B,GAGZqC,EAAejE,GAFfqE,EAAgB,0BAPtB,kDAYIA,EAAgB,0BAChBV,GAAgB,GAbpB,yBAeIjF,GAAc,GACd0F,GAAW,GAhBf,8EADc,uBAAC,WAAD,wBAqBdG,KACC,CAACpJ,IAGF,eAAChB,EAAD,WACGoJ,GAAY,cAAC,IAAD,CAAUpD,GAAG,eAEzBsD,GAAgBC,GACf,cAACrD,GAAA,EAAD,CACEC,QAAS,SACTC,QAAS,kBAAMoD,GAAgB,IAC/BnD,aAAW,EAHb,SAKGiD,IAIJtB,EACC,gCACE,kDACA,cAACD,GAAD,CACEC,YAAaA,EACb1D,WAAYA,EACZ2D,YAAa+B,EACb5E,SA9EiC,4CA+EjC8C,iBAAkB,0BAItB,8BACE,4DCtFV,IAAM3I,GAAYC,IAAOC,IAAV,mIAQA,SAAS4K,GAAT,GAWb,IAHE,IAPFC,EAOC,EAPDA,gBACAC,EAMC,EANDA,cACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,SACAC,EACC,EADDA,MAEMC,EAAc,GAEX3K,EAAI,EAAGA,GAAK4K,KAAKC,KAAKR,EAAgBD,GAAkBpK,IAC/D2K,EAAYlC,KAAKzI,GASnB,OANAiK,qBAAU,WACJI,GAAiBD,GACnBM,MAED,CAACL,EAAeD,EAAiBM,IAGlC,8BACGL,EAAgBD,GACf,eAAC,GAAD,WACE,cAAC,GAAD,CACE9H,SAA0B,IAAhBgI,EACVrJ,QAAS,kBAAMwJ,OAGhBE,EAAYG,KAAI,SAACC,GAAD,OACf,+BACE,cAACvI,GAAD,CACEC,QAAS6H,IAAgBS,EACzB9J,QAAS,kBAAMsJ,EAASQ,IAF1B,SAIGA,KALMA,MAUb,cAAC,GAAD,CACEzI,SAAUgI,IAAgBK,EAAYK,OACtC/J,QAAS,kBAAMuJ,YC3DpB,I,8BAAMS,GAAkB,CAC7BC,IAAK,IACLC,IAAK,SACLC,IAAK,SACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UCTDjM,GAAIT,IAAOU,EAAV,0PAeDiM,GAAW3M,YAAOS,GAAPT,CAAH,4GAQR4M,GAAa5M,YAAOS,GAAPT,CAAH,yGAQVD,GAAYC,IAAOC,IAAV,6NAYT4M,GAAc7M,IAAO8M,EAAV,uIASX3C,GAAOnK,IAAO8M,EAAV,iEAKJC,GAAoB/M,IAAOC,IAAV,2HAMnB,kBACoB,YADpB,EAAG+M,iBACH,mCAIA,kBACoB,WADpB,EAAGA,iBACH,mCAMEC,GAAOjN,IAAOC,IAAV,0IAUJiN,GAAWlN,YAAOiN,GAAPjN,CAAH,+CAIC,SAASmN,GAAT,GAAyD,IAAlC3E,EAAiC,EAAjCA,YAAa4E,EAAoB,EAApBA,SAC3CC,GAD+D,EAAVC,OAC1C,cAAC,IAAD,CAAiBrM,KAAMsM,OAClCC,EAAa,cAAC,IAAD,CAAiBvM,KAAMwM,MAG1C,OACE,eAAC,GAAD,WACE,eAACP,GAAD,WACE,cAACL,GAAD,UACGrE,EAAYO,YAAY2C,OANJ,GAOjBlD,EAAYO,YAAY2E,UAAU,EAPjB,IAO4C,MAC7DlF,EAAYO,cAElB,cAAC,GAAD,UAAOP,EAAYQ,UAErB,eAAC+D,GAAD,CAAmBC,gBAAiBxE,EAAYlH,KAAhD,eAC6CqM,IAA1ChC,GAAgBnD,EAAY0B,UACzByB,GAAgBnD,EAAY0B,UAC5B1B,EAAY0B,SACf1B,EAAYS,UAGf,cAAC,IAAD,CAAMzC,GAAI,sBAAwBgC,EAAYhH,GAA9C,SACE,cAACyL,GAAD,UACE,cAACN,GAAD,UAAWU,QAIf,cAACJ,GAAD,CAAMtL,QAAS,kBAAMyL,EAAS5E,EAAYhH,KAA1C,SACE,cAACoL,GAAD,UAAaY,SC1HrB,IAAMzN,GAAYC,IAAOC,IAAV,4GAQA,SAAS2N,KACtB,OACE,cAAC,GAAD,UACE,0DCRS,SAASC,GAAT,GAA8D,IAAnCC,EAAkC,EAAlCA,aAAcV,EAAoB,EAApBA,SAAUE,EAAU,EAAVA,OAAU,EACpCzM,mBAAS,GAD2B,mBACnEmK,EADmE,KACtD+C,EADsD,OAE5ClN,mBAAS,GAAhCmN,EAFmE,oBAIpEC,EAAyBjD,EAAcgD,EACvCE,EAA0BD,EAAyBD,EACnDG,EAAsBL,EAAazD,MACvC6D,EACAD,GAQF,OACE,gCACIH,EAAapC,OAGbyC,EAAoB3C,KAAI,SAAC4C,GAAD,OACtB,cAACjB,GAAD,CAEE3E,YAAa4F,EACbhB,SAAUA,EACVE,OAAQA,GAHHc,EAAG5M,OAJZ,cAACoM,GAAD,IAWF,cAAC/C,GAAD,CACEC,gBAAiBkD,EACjBjD,cAAe+C,EAAapC,OAC5BV,YAAaA,EACbC,SAvBW,SAACoD,GAAD,OAAgBN,EAAeM,IAwB1CnD,OAvBS,kBAAM6C,EAAe/C,EAAc,IAwB5CG,SAvBW,kBAAM4C,EAAe/C,EAAc,IAwB9CI,MAvBQ,kBAAM2C,EAAe,S,+BCf/BhO,GAAYC,IAAOC,IAAV,yNAYTgN,GAAOjN,IAAOC,IAAV,8GAQJqO,GAAWtO,YAAOiN,GAAPjN,CAAH,kHAQRuO,GAAYvO,YAAOiN,GAAPjN,CAAH,qEAKTwO,GAAQxO,IAAO8M,EAAV,iEAKL2B,GAASzO,IAAO8M,EAAV,kJAUG,SAAS4B,GAAT,GAA6D,IAA3BZ,EAA0B,EAA1BA,aAAc5D,EAAY,EAAZA,SAAY,EAC/CrJ,mBAAS,IADsC,mBAClE6E,EADkE,KAC3DiJ,EAD2D,KAezE,OAZAhE,qBAAU,WACR,IADc,EACViE,EAAa,EACbC,EAAY,EAFF,eAGYf,GAHZ,IAGd,2BAAwC,CAAC,IAA9BtF,EAA6B,QACjB,YAArBA,EAAYlH,KACPsN,GAAcpG,EAAYS,OAC1B4F,GAAarG,EAAYS,QANlB,8BASd0F,EAAS,CAAEC,aAAYC,YAAWC,QADpBD,EAAYD,MAEzB,CAACd,IAGF,eAAC,GAAD,WACE,eAACQ,GAAD,WACE,cAACE,GAAD,4BACA,eAACC,GAAD,gBACiCd,IAA9BhC,GAAgBzB,GACbyB,GAAgBzB,GAChBA,EACHxE,EAAMkJ,iBAGX,eAACN,GAAD,WACE,cAACE,GAAD,2BACA,eAACC,GAAD,gBACiCd,IAA9BhC,GAAgBzB,GACbyB,GAAgBzB,GAChBA,EACHxE,EAAMmJ,gBAGX,eAACN,GAAD,WACE,cAACC,GAAD,sBACA,eAACC,GAAD,WACG/I,EAAMoJ,QAAU,EAAI,IAAM,QACInB,IAA9BhC,GAAgBzB,GACbyB,GAAgBzB,GAChBA,EACHoB,KAAKyD,IAAIrJ,EAAMoJ,kB,sBC3FX,SAASE,GAAT,GAAmD,IAAlBC,EAAiB,EAAjBA,QAAS3N,EAAQ,EAARA,KACvD,OACE,eAACM,EAAD,WACE,cAACe,GAAD,CACEC,UAAoB,QAATtB,EACXK,QAAS,kBAAMsN,EAAQ,QAFzB,iBAMA,cAACtM,GAAD,CACEC,UAAoB,YAATtB,EACXK,QAAS,kBAAMsN,EAAQ,YAFzB,qBAMA,cAACtM,GAAD,CACEC,UAAoB,WAATtB,EACXK,QAAS,kBAAMsN,EAAQ,WAFzB,uBChBN,I,eAAMC,GAA6BlP,IAAOC,IAAV,kHAQ1BkP,GAAwBnP,IAAOC,IAAV,qDCRrBmB,IDYyBpB,IAAO8M,EAAV,gDCZf9M,IAAOoP,KAAV,gEAKJC,GAAQrP,IAAOsP,MAAV,0LAWI,SAASC,GAAT,GAGX,IAFFxG,EAEC,EAFDA,YACAyG,EACC,EADDA,eAMA,OACE,cAAC,GAAD,UACE,cAACH,GAAD,CACE/N,KAAK,OACLG,YAAY,SACZ0F,MAAO4B,EACP0G,SAVN,SAAkBC,GAChBF,EAAeE,EAAMC,OAAOxI,YCfjB,SAASyI,GAAT,GAA+D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAAmB,EACnDjP,mBAAS,OAD0C,mBACpES,EADoE,KAC9D2N,EAD8D,OAErCpO,mBAAS,IAF4B,mBAEpEkI,EAFoE,KAEvDyG,EAFuD,KAU3E,OALA7E,qBAAU,WACR5E,QAAQC,IAAI+C,GACZ+G,EAAgB,6BAAKD,GAAN,IAAoBvO,KAAMA,EAAMyH,YAAaA,OAC3D,CAACzH,EAAMyH,IAGR,eAACmG,GAAD,WACE,cAACC,GAAD,UACE,cAACI,GAAD,CACExG,YAAaA,EACbyG,eAAgBA,MAIpB,cAACL,GAAD,UACE,cAACH,GAAD,CAAuB1N,KAAMA,EAAM2N,QAASA,SCvBpD,I,MAAMlP,GAAYC,IAAOC,IAAV,wJAUTqO,GAAWtO,IAAOC,IAAV,oEAKR8P,GAAS/P,IAAOgQ,GAAV,4CAIG,SAASC,KACtB,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAACF,GAAD,6BAEF,cAAC,IAAD,CAAMvJ,GAAG,oBAAT,SACE,cAAC,GAAD,SCnBR,I,kBAAMzG,GAAYC,IAAOC,IAAV,sLAYTuE,GAAgBxE,IAAOC,IAAV,uIAQJ,SAASiQ,KAAa,IAAD,EACMrP,mBAAS,IADf,mBAC3BiN,EAD2B,KACbqC,EADa,OAEsBtP,mBAAS,IAF/B,mBAE3BuP,EAF2B,KAELC,EAFK,OAGMxP,mBAAS,CAAES,KAAM,QAHvB,mBAG3BuO,EAH2B,KAGbC,EAHa,OAIoBjP,oBAAS,GAJ7B,mBAI3ByP,EAJ2B,KAINC,EAJM,KA2ClC,OA5BA5F,qBAAU,WACR0F,EACEvC,EAAa0C,QACX,SAAChI,GAAD,OACyB,QAAtBqH,EAAavO,MACVkH,EAAYlH,OAASuO,EAAavO,OAEtCkH,EAAYO,YACT0H,cACAC,SAASb,EAAa9G,YAAY0H,qBAG1C,CAAC3C,EAAc+B,IAGlBlF,qBAAU,WACR4F,GAAuB,GACvBjH,KACGpD,MAAK,SAAC4H,GACL,OAAOA,EAAa1H,UAErBF,MAAK,SAAC4H,GACLqC,EAAgBrC,GAChBuC,EAAwBvC,MAE5ByC,GAAuB,KACtB,IAGD,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAACN,GAAD,IACA,cAACL,GAAD,CACEC,aAAcA,EACdC,gBAAiBA,IAGnB,cAACpB,GAAD,CACEZ,aAAcsC,EACdlG,SAjDS,QAoDVoG,EACC,cAAC3H,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMpC,UAAU,UAAhB,0BAGF,cAACoH,GAAD,CACEC,aAAcsC,EACdhD,SAzDV,SAA2B5L,GACzBkI,GAAkBlI,GAClB2O,EACErC,EAAa0C,QAAO,SAAChI,GAAD,OAAiBA,EAAYhH,KAAOA,cCtC9D,IAAMzB,GAAYC,IAAOC,IAAV,sLAYTuE,GAAgBxE,IAAOC,IAAV,uIAQb0Q,GAA2B3Q,IAAOC,IAAV,yKASxB2Q,GAAkB5Q,IAAOC,IAAV,+CAIfuO,GAAQxO,IAAO8M,EAAV,uFAML+D,GAAQ7Q,IAAO8M,EAAV,4CAII,SAASgE,KAAW,IAAD,EACMjQ,mBAAS,MADf,mBACzBkQ,EADyB,KACZC,EADY,KAOhC,OAJArG,qBAAU,WACRqG,EAAe/K,GAAY9B,oBAC1B,IAGD,8BACG4M,GACC,cAAC,GAAD,UACE,eAAC,GAAD,WACE,yCAEA,cAACJ,GAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,uBACA,cAACC,GAAD,UAAQE,EAAYzN,gBAGxB,cAACqN,GAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,4BACA,cAACC,GAAD,UAAQE,EAAY7M,oBCtErB,I,YAAA,OAA0B,iCCMnCnE,GAAYC,IAAOC,IAAV,sIAQTgR,GAAUjR,IAAOC,IAAV,yLAUPiR,GAAkBlR,IAAOC,IAAV,gEAKfkR,GAAUnR,IAAOoR,IAAV,+FAME,SAASC,KACtB,IAAIzJ,EAAUC,cACRrC,EAAaC,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAErD,OACE,eAAC,GAAD,WACGA,GAAc,cAAC,IAAD,CAAUgB,GAAI,eAC7B,eAACyK,GAAD,WACE,iDACA,qEACA,eAACC,GAAD,WACE,cAAC1O,EAAD,CACED,YAAY,MACZZ,QAAS,WACPiG,EAAQuB,KAAK,cAHjB,4BAQA,cAAC1G,GAAD,CACEd,QAAS,WACPiG,EAAQuB,KAAK,WAFjB,0BAUJ,cAACgI,GAAD,CAASG,IAAKC,GAAMC,IAAI,oC,aC9Df,SAASC,GAAT,GAAiE,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,kBAAsBC,EAAQ,iDAC7E,OACE,cAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNH,EACED,EAEA,cAAC,IAAD,CACElL,GAAI,CACFwB,SAAU,SACVtC,MAAO,CAAEoC,KAAMgK,U,yBCRd,SAASC,KACtB,IAAMrK,EAAWC,eACbC,EAAUC,cACRrC,EAAaC,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAIrD,OAFAO,QAAQC,IAAIR,GAGVA,GACE,cAAC/C,GAAD,CACEd,QAAS,WACP+F,GtBwBkB,SAACA,GAC3BzB,GAAYnC,SAEZ4D,EAAS,CACPpG,KAAMkG,QsB3BAI,EAAQuB,KAAK,MAHjB,qBCRN,IAAM6I,GAAWhS,YAAOuE,IAAPvE,CAAH,6IAUC,SAASiS,KAGtB,OAFmBxM,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,eAIjD,eAAC0M,GAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACE,cAACF,GAAA,EAAOG,MAAR,UACE,cAACL,GAAD,CAAUxL,GAAG,aAAb,kBAEF,cAAC0L,GAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,GAAA,EAAOM,SAAR,CAAiBhR,GAAG,mBAApB,UACE,eAACiR,GAAA,EAAD,CAAKhM,UAAU,UAAf,UACE,cAACuL,GAAD,CAAUxL,GAAG,aAAb,uBACA,cAACwL,GAAD,CAAUxL,GAAG,WAAb,wBAEF,cAACiM,GAAA,EAAD,CAAKhM,UAAU,WAAf,SACE,cAACsL,GAAD,YCuCGW,OAtDf,WACE,IAAMf,EAAoBlM,cAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAE5D,OACE,qBAAKiB,UAAU,MAAf,SACE,cAAC,IAAD,UACE,gCACE,cAACwL,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACE,cAACvB,GAAD,MAEF,cAAC,IAAD,CAAOuB,KAAK,SAAZ,SACE,cAACnL,GAAD,MAEF,cAACgK,GAAD,CACEmB,KAAK,aACLjB,kBAAmBA,EAFrB,SAIE,cAACzB,GAAD,MAGF,cAACuB,GAAD,CAAcmB,KAAK,WAAWjB,kBAAmBA,EAAjD,SACE,cAACb,GAAD,MAGF,cAAC,IAAD,CAAO8B,KAAK,YAAZ,SACE,cAACnO,GAAD,MAGF,cAACgN,GAAD,CACEmB,KAAK,oBACLjB,kBAAmBA,EAFrB,SAIE,cAAChI,GAAD,MAEF,cAAC8H,GAAD,CACEmB,KAAK,yBACLjB,kBAAmBA,EAFrB,SAIE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOiB,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUpM,GAAG,mBClDZqM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7M,MAAK,YAAkD,IAA/C8M,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCCRzK,GAAOzE,KAAKQ,MAAML,aAAaM,QAAQ,SAEvCgP,GAAehL,GACjB,CAAE7C,YAAY,EAAM6C,SACpB,CAAE7C,YAAY,EAAO6C,KAAM,MAuChBiL,GArCK,WAAmC,IAAlC5N,EAAiC,uDAAzB2N,GAAcE,EAAW,uCAC5CjS,EAAkBiS,EAAlBjS,KAAM8G,EAAYmL,EAAZnL,QAEd,OAAQ9G,GACN,KAAK8F,GAKL,KAAKC,GACH,OAAO,6BACF3B,GADL,IAEEF,YAAY,IAEhB,KAAK8B,GACH,OAAO,6BACF5B,GADL,IAEEF,YAAY,EACZ6C,KAAMD,EAAQC,OAElB,KAAKd,GAML,KAAKC,GACH,OAAO,6BACF9B,GADL,IAEEF,YAAY,EACZ6C,KAAM,OAEV,QACE,OAAO3C,IC1CE8N,GAFUC,2BAAgB,CAAE9N,KAAM2N,KCOlCI,GALDC,uBACZH,GACAI,+BAAoBC,2BAAgBC,QCCtCC,IAASlC,OACP,cAAC,IAAMmC,WAAP,UACE,cAAC,KAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJO,SAASC,eAAe,SAM1BrB,O","file":"static/js/main.17fbed9a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  color: red;\r\n  font-size: 0.9em;\r\n  margin-top: 0.3em;\r\n`;\r\n\r\nexport default function FormInputErrorMessage(props) {\r\n  return (\r\n    <Container>\r\n      <p>{props.message}</p>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst FormContainer = styled.div`\r\n  background: #fff;\r\n  @media (max-width: 768px) {\r\n    width: 100vw;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst FormContainerCentered = styled(FormContainer)`\r\n  min-width: 280px;\r\n  padding: 1em;\r\n  position: absolute;\r\n  transform: translate(-50%);\r\n  left: 50%;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 450px;\r\n    padding: 2em;\r\n    box-shadow: 0px 0px 8px 1px #e9ecef;\r\n  }\r\n`;\r\n\r\nconst FormContainerAuth = styled(FormContainerCentered)`\r\n  top: 15%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormContainerTransaction = styled(FormContainerCentered)`\r\n  top: 15%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport { FormContainerTransaction, FormContainerAuth };\r\n","import { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst I = styled.i`\r\n  position: absolute;\r\n  padding: 0 0.6em;\r\n  font-size: 1.2em;\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nexport default function FormInputPassword({ reference }) {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  const eyeIcon = (\r\n    <FontAwesomeIcon icon={passwordVisible ? faEyeSlash : faEye} />\r\n  );\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setPasswordVisible(passwordVisible ? false : true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form.Control\r\n        type={passwordVisible ? \"text\" : \"password\"}\r\n        name=\"password\"\r\n        id=\"password\"\r\n        placeholder=\"Enter password\"\r\n        ref={reference}\r\n      />\r\n      <I onClick={togglePasswordVisibility}>{eyeIcon}</I>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst ButtonContainerTransactionType = styled.div`\r\n  display: inline-block;\r\n  border: 2px solid #e9ecef;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst ButtonContainerForm = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-top: 2em;\r\n`;\r\n\r\nexport { ButtonContainerTransactionType, ButtonContainerForm };\r\n","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst plusIcon = <FontAwesomeIcon icon={faPlus} />;\r\nconst arrowLeftIcon = <FontAwesomeIcon icon={faAngleLeft} />;\r\nconst arrowRightIcon = <FontAwesomeIcon icon={faAngleRight} />;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 0.4em 1.2em;\r\n  transition: 0.3s ease;\r\n\r\n  width: ${(props) => props.width};\r\n  margin-right: ${(props) => props.marginRight};\r\n`;\r\n\r\nconst ButtonPrimary = styled(Button)`\r\n  background: #f3626a;\r\n  border: 1px solid #f3626a;\r\n  &:hover {\r\n    background: #f46f77;\r\n  }\r\n`;\r\n\r\nconst ButtonSecondary = styled(Button)`\r\n  background: #fff;\r\n  border: 1px solid #f3626a;\r\n  color: #f3626a;\r\n`;\r\n\r\nconst ButtonPrimaryRound = styled(ButtonPrimary)`\r\n  width: 3em;\r\n  height: 3em;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px 2px 0px #848484;\r\n\r\n  @media (max-width: 600px) {\r\n    position: fixed;\r\n    z-index: 20;\r\n    bottom: 30px;\r\n    left: 30px;\r\n  }\r\n`;\r\n\r\nconst ButtonTransactionType = styled.button`\r\n  padding: 0.3em 1em;\r\n  background: #fff;\r\n  border: none;\r\n  background: ${(props) => (props.isCurrent ? \"#e9ecef\" : \"white\")};\r\n`;\r\n\r\nconst ButtonAddTransaction = () => {\r\n  return <ButtonPrimaryRound>{plusIcon}</ButtonPrimaryRound>;\r\n};\r\n\r\nconst ButtonPagination = styled.button`\r\n  background: #e9ecef;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 100px;\r\n  padding: 0.5em 1em;\r\n  margin: 0 0.2em;\r\n`;\r\n\r\nconst ButtonArrowLeft = ({ onClick, disabled }) => {\r\n  return (\r\n    <ButtonPagination onClick={onClick} disabled={disabled}>\r\n      {arrowLeftIcon}\r\n    </ButtonPagination>\r\n  );\r\n};\r\n\r\nconst ButtonArrowRight = ({ onClick, disabled }) => {\r\n  return (\r\n    <ButtonPagination onClick={onClick} disabled={disabled}>\r\n      {arrowRightIcon}\r\n    </ButtonPagination>\r\n  );\r\n};\r\n\r\nconst ButtonPageNumber = styled(ButtonPagination)`\r\n  background: ${(props) => (props.current ? \"#f3626a\" : \"#e9ecef\")};\r\n  color: ${(props) => (props.current ? \"#ffffff\" : \"#000000\")};\r\n`;\r\n\r\nexport {\r\n  ButtonPrimary,\r\n  ButtonSecondary,\r\n  ButtonTransactionType,\r\n  ButtonPageNumber,\r\n  ButtonArrowRight,\r\n  ButtonArrowLeft,\r\n  ButtonAddTransaction,\r\n};\r\n","// export const API_URL = \"http://localhost:8080/api\";\r\nexport const API_URL = \"http://expense-tracker-api-java.herokuapp.com/api\";\r\n","import { API_URL } from \"../api/Api\";\r\n\r\nclass AuthService {\r\n  login = (username, password) => {\r\n    return fetch(API_URL + \"/auth/signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n  };\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  signup = (username, email, password) => {\r\n    return fetch(API_URL + \"/auth/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n        email: email,\r\n      }),\r\n    });\r\n  };\r\n\r\n  getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  };\r\n}\r\n\r\nexport default new AuthService();\r\n","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FormInputErrorMessage from \"../form/FormInputErrorMessage\";\r\nimport { FormContainerAuth } from \"../form/FormContainer\";\r\nimport FormInputPassword from \"../form/FormInputPassword\";\r\nimport { ButtonContainerForm } from \"../buttons/ButtonContainer\";\r\nimport { ButtonPrimary } from \"../buttons/Button\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CustomLink = styled(Link)`\r\n  text-decoration: underline;\r\n  color: #f3626a;\r\n  margin: 0 0.3em;\r\n\r\n  &:hover {\r\n    color: #f46f77;\r\n  }\r\n`;\r\n\r\nconst ContainerFlex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 1em;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nexport default function RegistrationView() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [registrationSuccessful, setRegistrationSuccessful] = useState(false);\r\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const onSubmit = async (formData) => {\r\n    setSubmitting(true);\r\n    console.log(formData);\r\n\r\n    await AuthService.signup(\r\n      formData.username,\r\n      formData.email,\r\n      formData.password\r\n    ).then(\r\n      (response) =>\r\n        response.json().then((data) => {\r\n          console.log(data.message);\r\n          if (response.status && response.status !== 200) {\r\n            setInvalidCredentials(true);\r\n            setShowAlert(true);\r\n            setAlertMessage(data.message);\r\n          } else {\r\n            setRegistrationSuccessful(true);\r\n          }\r\n        }),\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    setSubmitting(false);\r\n  };\r\n\r\n  if (registrationSuccessful) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <FormContainerAuth>\r\n      {isLoggedIn && <Redirect to={\"/dashboard\"} />}\r\n      <h1 className=\"text-center mt-3 mb-5\">Create account</h1>\r\n      {invalidCredentials && showAlert && (\r\n        <Alert\r\n          variant={\"danger\"}\r\n          onClose={() => setShowAlert(false)}\r\n          dismissible\r\n        >\r\n          {alertMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Enter username\"\r\n            ref={register({\r\n              required: \"The Username field is required\",\r\n            })}\r\n          />\r\n          {errors.username ? (\r\n            <FormInputErrorMessage message={errors.username.message} />\r\n          ) : null}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            ref={register({\r\n              required: \"The Email field is required\",\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"Invalid email address\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.email ? (\r\n            <FormInputErrorMessage message={errors.email.message} />\r\n          ) : null}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <FormInputPassword\r\n            reference={register({\r\n              required: \"The Password field is required\",\r\n            })}\r\n          />\r\n          {errors.password ? (\r\n            <FormInputErrorMessage message={errors.password.message} />\r\n          ) : null}\r\n        </Form.Group>\r\n\r\n        <ButtonContainerForm>\r\n          <ButtonPrimary type=\"submit\" disabled={submitting} width={\"100%\"}>\r\n            Create account\r\n          </ButtonPrimary>\r\n        </ButtonContainerForm>\r\n\r\n        <ContainerFlex>\r\n          <p>You already have an account?</p>\r\n          <CustomLink to=\"/login\">Log in</CustomLink>\r\n        </ContainerFlex>\r\n      </Form>\r\n    </FormContainerAuth>\r\n  );\r\n}\r\n","export const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\r\nexport const SIGNIN_FAILURE = \"SIGNIN_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FormInputErrorMessage from \"../form/FormInputErrorMessage\";\r\nimport { FormContainerAuth } from \"../form/FormContainer\";\r\nimport FormInputPassword from \"../form/FormInputPassword\";\r\nimport { ButtonPrimary } from \"../buttons/Button\";\r\nimport { ButtonContainerForm } from \"../buttons/ButtonContainer\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Redirect, useHistory, useLocation } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signin } from \"../../actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomLink = styled(Link)`\r\n  text-decoration: underline;\r\n  color: #f3626a;\r\n  margin: 0 0.3em;\r\n\r\n  &:hover {\r\n    color: #f46f77;\r\n  }\r\n`;\r\n\r\nconst ContainerFlex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 1em;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nexport default function LoginView() {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  const handleLogin = (formData) => {\r\n    setSubmitting(true);\r\n    setShowAlert(false);\r\n    try {\r\n      dispatch(signin(formData.username, formData.password)).then(\r\n        (response) => {\r\n          if (!response.ok) {\r\n            setInvalidCredentials(true);\r\n            setShowAlert(true);\r\n          } else {\r\n            console.log(from.pathname);\r\n            if (from.pathname === \"/\") {\r\n              history.replace(\"/dashboard\");\r\n            } else {\r\n              history.replace(from);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainerAuth>\r\n      {isLoggedIn && <Redirect to={\"/dashboard\"} />}\r\n      <h1 className=\"text-center mt-3 mb-5\">Log in</h1>\r\n\r\n      {invalidCredentials && showAlert && (\r\n        <Alert\r\n          variant={\"danger\"}\r\n          onClose={() => setShowAlert(false)}\r\n          dismissible\r\n        >\r\n          Invalid username or password.\r\n        </Alert>\r\n      )}\r\n\r\n      <Form onSubmit={handleSubmit(handleLogin)}>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Enter username\"\r\n            ref={register({\r\n              required: \"The Username field is required\",\r\n            })}\r\n          />\r\n          {errors.username ? (\r\n            <FormInputErrorMessage message={errors.username.message} />\r\n          ) : null}\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <FormInputPassword\r\n            reference={register({\r\n              required: \"The Password field is required\",\r\n            })}\r\n          />\r\n          {errors.password ? (\r\n            <FormInputErrorMessage message={errors.password.message} />\r\n          ) : null}\r\n        </Form.Group>\r\n\r\n        <ButtonContainerForm>\r\n          <ButtonPrimary type=\"submit\" disabled={submitting} width={\"100%\"}>\r\n            Log in\r\n          </ButtonPrimary>\r\n        </ButtonContainerForm>\r\n\r\n        <ContainerFlex>\r\n          <p>You don't have an account yet?</p>\r\n          <CustomLink to=\"/register\">Create an account</CustomLink>\r\n        </ContainerFlex>\r\n      </Form>\r\n    </FormContainerAuth>\r\n  );\r\n}\r\n","import AuthService from \"../services/AuthService\";\r\nimport {\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAILURE,\r\n  LOGOUT,\r\n} from \"./type\";\r\n\r\nexport const signup = (username, email, password) => (dispatch) => {\r\n  return AuthService.signup(username, email, password).then((response) =>\r\n    response.json().then((data) => {\r\n      console.log(response);\r\n      if (!response.ok) {\r\n        dispatch({ type: SIGNUP_FAILURE });\r\n      } else {\r\n        dispatch({ type: SIGNUP_SUCCESS });\r\n      }\r\n      return response;\r\n    })\r\n  );\r\n};\r\n\r\nexport const signin = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then((response) =>\r\n    response.json().then((data) => {\r\n      console.log(response);\r\n      if (!response.ok) {\r\n        dispatch({ type: SIGNIN_FAILURE });\r\n      } else {\r\n        if (data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(data));\r\n        }\r\n        dispatch({ type: SIGNIN_SUCCESS, payload: { user: data } });\r\n      }\r\n      return response;\r\n    })\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import { useForm } from \"react-hook-form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport FormInputErrorMessage from \"../form/FormInputErrorMessage\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { ButtonPrimary, ButtonSecondary } from \"../buttons/Button\";\r\nimport { ButtonContainerForm } from \"../buttons/ButtonContainer\";\r\n\r\nexport default function TransactionForm({\r\n  transaction,\r\n  onSubmit,\r\n  dataLoading,\r\n  submitting,\r\n  submitButtonText,\r\n}) {\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  function handleCancel() {\r\n    history.push(\"/dashboard\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {submitting || dataLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"Description\">Description</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"description\"\r\n              id=\"description\"\r\n              placeholder=\"Enter description\"\r\n              defaultValue={transaction.description}\r\n              ref={register({\r\n                required: \"The Description field is required\",\r\n              })}\r\n            />\r\n            {errors.description ? (\r\n              <FormInputErrorMessage message={errors.description.message} />\r\n            ) : null}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"Date\">Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"date\"\r\n              id=\"date\"\r\n              defaultValue={transaction.date}\r\n              ref={register({\r\n                required: \"The Date field is required\",\r\n              })}\r\n            />\r\n            {errors.date ? (\r\n              <FormInputErrorMessage message={errors.date.message} />\r\n            ) : null}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor=\"Amount\">Amount</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amount\"\r\n              defaultValue={transaction.amount}\r\n              placeholder=\"Enter amount\"\r\n              ref={register({\r\n                required: \"The Amount field is required\",\r\n              })}\r\n            />\r\n            {errors.amount ? (\r\n              <FormInputErrorMessage message={errors.amount.message} />\r\n            ) : null}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Type</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"type\"\r\n              defaultValue={transaction.type}\r\n              placeholder=\"Choose type\"\r\n              ref={register({\r\n                required: \"The Type field is required\",\r\n              })}\r\n            >\r\n              <option>INCOME</option>\r\n              <option>EXPENSE</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <ButtonContainerForm>\r\n            <ButtonPrimary type=\"submit\" marginRight={\"1em\"}>\r\n              {submitButtonText}\r\n            </ButtonPrimary>\r\n            <ButtonSecondary onClick={handleCancel}>Cancel</ButtonSecondary>\r\n          </ButtonContainerForm>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import { API_URL } from \"../../api/Api\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nconst fetchTransactions = async () => {\r\n  const { Authorization } = authHeader();\r\n  return fetch(API_URL + \"/transactions/me\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: Authorization,\r\n    },\r\n  });\r\n};\r\n\r\nconst fetchTransactionById = async (id) => {\r\n  const { Authorization } = authHeader();\r\n  return fetch(API_URL + \"/transactions/\" + id, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: Authorization,\r\n    },\r\n  });\r\n};\r\n\r\nconst putTransaction = async (transaction) => {\r\n  const { Authorization } = authHeader();\r\n  return fetch(API_URL + \"/transactions/\" + transaction.id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: Authorization,\r\n    },\r\n    body: JSON.stringify(transaction),\r\n  });\r\n};\r\n\r\nconst postTransaction = async (transaction) => {\r\n  const { Authorization } = authHeader();\r\n  return await fetch(API_URL + \"/transactions\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: Authorization,\r\n    },\r\n    body: JSON.stringify(transaction),\r\n  });\r\n};\r\n\r\nconst deleteTransaction = async (id) => {\r\n  const { Authorization } = authHeader();\r\n  return await fetch(API_URL + \"/transactions/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: Authorization,\r\n    },\r\n  });\r\n};\r\n\r\nexport {\r\n  fetchTransactions,\r\n  fetchTransactionById,\r\n  postTransaction,\r\n  putTransaction,\r\n  deleteTransaction,\r\n};\r\n","import { useState } from \"react\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport { FormContainerTransaction } from \"../form/FormContainer\";\r\nimport { postTransaction } from \"../transaction/TransactionController\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nexport default function NewTransactionView() {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\r\n    \"An error occured while creating new transaction.\"\r\n  );\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  async function onSubmit(transaction) {\r\n    setSubmitting(true);\r\n    setAlertVisible(false);\r\n    transaction.userId = AuthService.getCurrentUser().id;\r\n    transaction.currency = \"USD\"; //\r\n\r\n    try {\r\n      const response = await postTransaction(transaction);\r\n      if (!response.ok) {\r\n        setAlertVisible(true);\r\n      } else {\r\n        setRedirect(true);\r\n      }\r\n    } catch (error) {\r\n      setAlertVisible(true);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainerTransaction>\r\n      {redirect && <Redirect to=\"/dashboard\" />}\r\n\r\n      <h1>New transaction</h1>\r\n\r\n      {errorMessage && alertVisible && (\r\n        <Alert\r\n          variant={\"danger\"}\r\n          onClose={() => setAlertVisible(false)}\r\n          dismissible\r\n        >\r\n          {errorMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      <TransactionForm\r\n        transaction={{ date: new Date().toISOString().slice(0, 10) }}\r\n        submitting={submitting}\r\n        onSubmit={onSubmit}\r\n        submitButtonText={\"Create transaction\"}\r\n      />\r\n    </FormContainerTransaction>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport { FormContainerTransaction } from \"../form/FormContainer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchTransactionById } from \"./TransactionController\";\r\nimport { putTransaction } from \"../transaction/TransactionController\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nexport default function NewTransactionView() {\r\n  const [transaction, setTransaction] = useState({});\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"Transaction not found.\");\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  async function onSubmit(transaction) {\r\n    setSubmitting(true);\r\n    setAlertVisible(false);\r\n    setErrorMessage(\"Transaction not found.\");\r\n    transaction.id = id;\r\n    transaction.userId = AuthService.getCurrentUser().id;\r\n    transaction.currency = \"USD\"; //\r\n\r\n    try {\r\n      const response = await putTransaction(transaction);\r\n      if (!response.ok) {\r\n        setAlertVisible(true);\r\n        setErrorMessage(\"An error occured while updating transaction.\");\r\n      } else {\r\n        setRedirect(true);\r\n      }\r\n    } catch (error) {\r\n      setAlertVisible(true);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchTransaction() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetchTransactionById(id);\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          setErrorMessage(\"Transaction not found.\");\r\n        } else {\r\n          setTransaction(data);\r\n        }\r\n      } catch (error) {\r\n        setErrorMessage(\"Transaction not found.\");\r\n        setAlertVisible(true);\r\n      } finally {\r\n        setSubmitting(false);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchTransaction();\r\n  }, [id]);\r\n\r\n  return (\r\n    <FormContainerTransaction>\r\n      {redirect && <Redirect to=\"/dashboard\" />}\r\n\r\n      {errorMessage && alertVisible && (\r\n        <Alert\r\n          variant={\"danger\"}\r\n          onClose={() => setAlertVisible(false)}\r\n          dismissible\r\n        >\r\n          {errorMessage}\r\n        </Alert>\r\n      )}\r\n\r\n      {transaction ? (\r\n        <div>\r\n          <h1>Edit transaction</h1>\r\n          <TransactionForm\r\n            transaction={transaction}\r\n            submitting={submitting}\r\n            dataLoading={loading}\r\n            onSubmit={onSubmit}\r\n            submitButtonText={\"Update transaction\"}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p>Transaction not found.</p>\r\n        </div>\r\n      )}\r\n    </FormContainerTransaction>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ButtonPageNumber,\r\n  ButtonArrowLeft,\r\n  ButtonArrowRight,\r\n} from \"../buttons/Button\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 2em;\r\n`;\r\n\r\nexport default function Pagination({\r\n  elementsPerPage,\r\n  totalElements,\r\n  currentPage,\r\n  paginate,\r\n  pageUp,\r\n  pageDown,\r\n  reset,\r\n}) {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalElements / elementsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (totalElements <= elementsPerPage) {\r\n      reset();\r\n    }\r\n  }, [totalElements, elementsPerPage, reset]);\r\n\r\n  return (\r\n    <div>\r\n      {totalElements > elementsPerPage && (\r\n        <Container>\r\n          <ButtonArrowLeft\r\n            disabled={currentPage === 1}\r\n            onClick={() => pageDown()}\r\n          />\r\n\r\n          {pageNumbers.map((number) => (\r\n            <span key={number}>\r\n              <ButtonPageNumber\r\n                current={currentPage === number}\r\n                onClick={() => paginate(number)}\r\n              >\r\n                {number}\r\n              </ButtonPageNumber>\r\n            </span>\r\n          ))}\r\n\r\n          <ButtonArrowRight\r\n            disabled={currentPage === pageNumbers.length}\r\n            onClick={() => pageUp()}\r\n          />\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export const CurrencySymbols = {\r\n  USD: \"$\", // US Dollar\r\n  EUR: \"€\", // Euro\r\n  CRC: \"₡\", // Costa Rican Colón\r\n  GBP: \"£\", // British Pound Sterling\r\n  ILS: \"₪\", // Israeli New Sheqel\r\n  INR: \"₹\", // Indian Rupee\r\n  JPY: \"¥\", // Japanese Yen\r\n  KRW: \"₩\", // South Korean Won\r\n  NGN: \"₦\", // Nigerian Naira\r\n  PHP: \"₱\", // Philippine Peso\r\n  PLN: \"zł\", // Polish Zloty\r\n  PYG: \"₲\", // Paraguayan Guarani\r\n  THB: \"฿\", // Thai Baht\r\n  UAH: \"₴\", // Ukrainian Hryvnia\r\n  VND: \"₫\", // Vietnamese Dong\r\n};\r\n","import styled from \"styled-components\";\r\nimport { CurrencySymbols } from \"../utils/CurrencySymbols\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst I = styled.i`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 1em;\r\n  opacity: 0.8;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst EditIcon = styled(I)`\r\n  color: black;\r\n  &:hover {\r\n    color: orange;\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nconst DeleteIcon = styled(I)`\r\n  color: black;\r\n  &:hover {\r\n    color: red;\r\n    transition: 0.2s;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-bottom: 1px solid #f3f3f3;\r\n  padding: 1em 0.5em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em 2em;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 0;\r\n  overflow-wrap: break-word;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nconst Date = styled.p`\r\n  font-size: 0.8em;\r\n  margin: 0;\r\n`;\r\n\r\nconst CurrencyAndAmount = styled.div`\r\n  display: flex;\r\n  font-weight: bold;\r\n  padding-right: 1em;\r\n  margin: 0;\r\n\r\n  ${({ transactionType }) =>\r\n    transactionType === \"EXPENSE\" &&\r\n    `\r\n      color: #c1121f;\r\n    `}\r\n  ${({ transactionType }) =>\r\n    transactionType === \"INCOME\" &&\r\n    `\r\n      color: #008000;\r\n    `}\r\n`;\r\n\r\nconst Item = styled.div`\r\n  height: 40px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nconst ItemGrow = styled(Item)`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport default function Transaction({ transaction, onRemove, onEdit }) {\r\n  const editIcon = <FontAwesomeIcon icon={faPen} />;\r\n  const deleteIcon = <FontAwesomeIcon icon={faTrash} />;\r\n  const maxDescriptionLength = 18;\r\n\r\n  return (\r\n    <Container>\r\n      <ItemGrow>\r\n        <Description>\r\n          {transaction.description.length > maxDescriptionLength\r\n            ? transaction.description.substring(0, maxDescriptionLength) + \"...\"\r\n            : transaction.description}\r\n        </Description>\r\n        <Date>{transaction.date}</Date>\r\n      </ItemGrow>\r\n      <CurrencyAndAmount transactionType={transaction.type}>\r\n        {CurrencySymbols[transaction.currency] !== undefined\r\n          ? CurrencySymbols[transaction.currency]\r\n          : transaction.currency}\r\n        {transaction.amount}\r\n      </CurrencyAndAmount>\r\n\r\n      <Link to={\"/transactions/edit/\" + transaction.id}>\r\n        <Item>\r\n          <EditIcon>{editIcon}</EditIcon>\r\n        </Item>\r\n      </Link>\r\n\r\n      <Item onClick={() => onRemove(transaction.id)}>\r\n        <DeleteIcon>{deleteIcon}</DeleteIcon>\r\n      </Item>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 1em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em 2em;\r\n  }\r\n`;\r\n\r\nexport default function TransactionsNotFound() {\r\n  return (\r\n    <Container>\r\n      <h3>No transactions found.</h3>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Pagination from \"../pagination/Pagination\";\r\nimport Transaction from \"./Transaction\";\r\nimport TransactionsNotFound from \"./TransactionsNotFound\";\r\n\r\nexport default function TransactionList({ transactions, onRemove, onEdit }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [transactionsPerPage] = useState(5);\r\n\r\n  const indexOfLastTransaction = currentPage * transactionsPerPage;\r\n  const indexOfFirstTransaction = indexOfLastTransaction - transactionsPerPage;\r\n  const currentTransactions = transactions.slice(\r\n    indexOfFirstTransaction,\r\n    indexOfLastTransaction\r\n  );\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  const pageUp = () => setCurrentPage(currentPage + 1);\r\n  const pageDown = () => setCurrentPage(currentPage - 1);\r\n  const reset = () => setCurrentPage(1);\r\n\r\n  return (\r\n    <div>\r\n      {!transactions.length ? (\r\n        <TransactionsNotFound />\r\n      ) : (\r\n        currentTransactions.map((tr) => (\r\n          <Transaction\r\n            key={tr.id}\r\n            transaction={tr}\r\n            onRemove={onRemove}\r\n            onEdit={onEdit}\r\n          ></Transaction>\r\n        ))\r\n      )}\r\n      <Pagination\r\n        elementsPerPage={transactionsPerPage}\r\n        totalElements={transactions.length}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n        pageUp={pageUp}\r\n        pageDown={pageDown}\r\n        reset={reset}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CurrencySymbols } from \"../utils/CurrencySymbols\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid #f3f3f3;\r\n  padding: 0.5em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nconst Item = styled.div`\r\n  padding: 1em 0.5em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nconst ItemLeft = styled(Item)`\r\n  margin-right: 1em;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-right: 2em;\r\n  }\r\n`;\r\n\r\nconst ItemRight = styled(Item)`\r\n  flex-grow: 1;\r\n  text-align: right;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 0.7em;\r\n  margin: 0;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  margin: 0;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 1.2em;\r\n  }\r\n`;\r\n\r\nexport default function TransactionListSummary({ transactions, currency }) {\r\n  const [state, setState] = useState({});\r\n\r\n  useEffect(() => {\r\n    let expenseSum = 0;\r\n    let incomeSum = 0;\r\n    for (const transaction of transactions) {\r\n      transaction.type === \"EXPENSE\"\r\n        ? (expenseSum += transaction.amount)\r\n        : (incomeSum += transaction.amount);\r\n    }\r\n    let balance = incomeSum - expenseSum;\r\n    setState({ expenseSum, incomeSum, balance });\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <Container>\r\n      <ItemLeft>\r\n        <Title>Total Expense</Title>\r\n        <Amount>\r\n          {CurrencySymbols[currency] !== undefined\r\n            ? CurrencySymbols[currency]\r\n            : currency}\r\n          {state.expenseSum}\r\n        </Amount>\r\n      </ItemLeft>\r\n      <ItemLeft>\r\n        <Title>Total Income</Title>\r\n        <Amount>\r\n          {CurrencySymbols[currency] !== undefined\r\n            ? CurrencySymbols[currency]\r\n            : currency}\r\n          {state.incomeSum}\r\n        </Amount>\r\n      </ItemLeft>\r\n      <ItemRight>\r\n        <Title>Balance</Title>\r\n        <Amount>\r\n          {state.balance < 0 ? \"-\" : \"\"}\r\n          {CurrencySymbols[currency] !== undefined\r\n            ? CurrencySymbols[currency]\r\n            : currency}\r\n          {Math.abs(state.balance)}\r\n        </Amount>\r\n      </ItemRight>\r\n    </Container>\r\n  );\r\n}\r\n","import { ButtonTransactionType } from \"../../buttons/Button\";\r\nimport { ButtonContainerTransactionType } from \"../../buttons/ButtonContainer\";\r\n\r\nexport default function TransactionTypeFilter({ setType, type }) {\r\n  return (\r\n    <ButtonContainerTransactionType>\r\n      <ButtonTransactionType\r\n        isCurrent={type === \"ALL\"}\r\n        onClick={() => setType(\"ALL\")}\r\n      >\r\n        All\r\n      </ButtonTransactionType>\r\n      <ButtonTransactionType\r\n        isCurrent={type === \"EXPENSE\"}\r\n        onClick={() => setType(\"EXPENSE\")}\r\n      >\r\n        Expense\r\n      </ButtonTransactionType>\r\n      <ButtonTransactionType\r\n        isCurrent={type === \"INCOME\"}\r\n        onClick={() => setType(\"INCOME\")}\r\n      >\r\n        Income\r\n      </ButtonTransactionType>\r\n    </ButtonContainerTransactionType>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst TransactionFilterContainer = styled.div`\r\n  padding: 1em 0.5em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em 2em;\r\n  }\r\n`;\r\n\r\nconst TransactionFilterItem = styled.div`\r\n  margin-bottom: 1em;\r\n`;\r\n\r\nconst TransactionFilterTitle = styled.p`\r\n  margin: 0.4em;\r\n`;\r\n\r\nexport {\r\n  TransactionFilterContainer,\r\n  TransactionFilterItem,\r\n  TransactionFilterTitle,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  border: none;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #e9ecef;\r\n  padding: 0.5em 1em;\r\n  &:focus {\r\n    outline-color: #dee2e6;\r\n  }\r\n`;\r\n\r\nexport default function TransactionDescriptionFilter({\r\n  description,\r\n  setDescription,\r\n}) {\r\n  function onChange(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={description}\r\n        onChange={onChange}\r\n      ></Input>\r\n    </Form>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport TransactionTypeFilter from \"./TransactionTypeFilter\";\r\nimport {\r\n  TransactionFilterContainer,\r\n  TransactionFilterItem,\r\n} from \"./TransactionFilterContainer\";\r\nimport TransactionDescriptionFilter from \"./TransactionDescriptionFilter\";\r\n\r\nexport default function TransactionFilter({ filterParams, setFilterParams }) {\r\n  const [type, setType] = useState(\"ALL\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //update filterParams on transaction type change\r\n  useEffect(() => {\r\n    console.log(description);\r\n    setFilterParams({ ...filterParams, type: type, description: description });\r\n  }, [type, description]);\r\n\r\n  return (\r\n    <TransactionFilterContainer>\r\n      <TransactionFilterItem>\r\n        <TransactionDescriptionFilter\r\n          description={description}\r\n          setDescription={setDescription}\r\n        />\r\n      </TransactionFilterItem>\r\n\r\n      <TransactionFilterItem>\r\n        <TransactionTypeFilter type={type} setType={setType} />\r\n      </TransactionFilterItem>\r\n    </TransactionFilterContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ButtonAddTransaction } from \"../buttons/Button\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5em;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 1em 2em;\r\n  }\r\n`;\r\n\r\nconst ItemLeft = styled.div`\r\n  flex-grow: 1;\r\n  text-align: left;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  margin: 0;\r\n`;\r\n\r\nexport default function TransactionListHeader() {\r\n  return (\r\n    <Container>\r\n      <ItemLeft>\r\n        <Header>Transactions</Header>\r\n      </ItemLeft>\r\n      <Link to=\"/transactions/new\">\r\n        <ButtonAddTransaction />\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n","import TransactionList from \"../transaction/TransactionList\";\r\nimport TransactionListSummary from \"../transaction/TransactionListSummary\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport {\r\n  fetchTransactions,\r\n  deleteTransaction,\r\n} from \"../transaction/TransactionController\";\r\nimport TransactionFilter from \"../transaction/filter/TransactionFilter\";\r\nimport TransactionListHeader from \"../transaction/TransactionListHeader\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n\r\n  @media (min-width: 768px) and (max-width: 999px) {\r\n    width: 80vw;\r\n  }\r\n\r\n  @media (min-width: 1000px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\n\r\nconst ContainerFlex = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1em 0;\r\n`;\r\n\r\nexport default function Dashboard() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\r\n  const [filterParams, setFilterParams] = useState({ type: \"ALL\" });\r\n  const [transactionsLoading, setTransactionsLoading] = useState(true);\r\n  const currency = \"USD\";\r\n\r\n  function removeTransaction(id) {\r\n    deleteTransaction(id);\r\n    setTransactions(\r\n      transactions.filter((transaction) => transaction.id !== id)\r\n    );\r\n  }\r\n\r\n  //filter transactions on filterParams change\r\n  useEffect(() => {\r\n    setFilteredTransactions(\r\n      transactions.filter(\r\n        (transaction) =>\r\n          (filterParams.type !== \"ALL\"\r\n            ? transaction.type === filterParams.type\r\n            : true) &&\r\n          transaction.description\r\n            .toLowerCase()\r\n            .includes(filterParams.description.toLowerCase())\r\n      )\r\n    );\r\n  }, [transactions, filterParams]);\r\n\r\n  //fetch transactions on render\r\n  useEffect(() => {\r\n    setTransactionsLoading(true);\r\n    fetchTransactions()\r\n      .then((transactions) => {\r\n        return transactions.json();\r\n      })\r\n      .then((transactions) => {\r\n        setTransactions(transactions);\r\n        setFilteredTransactions(transactions);\r\n      });\r\n    setTransactionsLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <ContainerFlex>\r\n      <Container>\r\n        <TransactionListHeader />\r\n        <TransactionFilter\r\n          filterParams={filterParams}\r\n          setFilterParams={setFilterParams}\r\n        />\r\n\r\n        <TransactionListSummary\r\n          transactions={filteredTransactions}\r\n          currency={currency}\r\n        />\r\n\r\n        {transactionsLoading ? (\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        ) : (\r\n          <TransactionList\r\n            transactions={filteredTransactions}\r\n            onRemove={removeTransaction}\r\n          ></TransactionList>\r\n        )}\r\n      </Container>\r\n    </ContainerFlex>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 90vw;\r\n\r\n  @media (min-width: 768px) and (max-width: 999px) {\r\n    width: 80vw;\r\n  }\r\n\r\n  @media (min-width: 1000px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\n\r\nconst ContainerFlex = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 2em 0;\r\n`;\r\n\r\nconst UserProfileDataContainer = styled.div`\r\n  border: 1px solid #f3f3f3;\r\n  display: flex;\r\n  align-items: center;\r\n  jusitfy-content: center;\r\n  padding: 1em 2em;\r\n  margin: 1em 0;\r\n`;\r\n\r\nconst UserProfileData = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nexport default function Profile() {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(AuthService.getCurrentUser());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {currentUser && (\r\n        <ContainerFlex>\r\n          <Container>\r\n            <h1>Profile</h1>\r\n\r\n            <UserProfileDataContainer>\r\n              <UserProfileData>\r\n                <Title>Username</Title>\r\n                <Value>{currentUser.username}</Value>\r\n              </UserProfileData>\r\n            </UserProfileDataContainer>\r\n            <UserProfileDataContainer>\r\n              <UserProfileData>\r\n                <Title>Email address</Title>\r\n                <Value>{currentUser.email}</Value>\r\n              </UserProfileData>\r\n            </UserProfileDataContainer>\r\n          </Container>\r\n        </ContainerFlex>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/home.839a243e.svg\";","import { Redirect, useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { ButtonPrimary, ButtonSecondary } from \"../buttons/Button\";\r\nimport home from \"../../images/home.svg\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  margin: 1em;\r\n`;\r\n\r\nconst HomeImg = styled.img`\r\n  position: relative;\r\n  max-width: 100%;\r\n  max-height: 1000%;\r\n`;\r\n\r\nexport default function HomeView() {\r\n  let history = useHistory();\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  return (\r\n    <Container>\r\n      {isLoggedIn && <Redirect to={\"/dashboard\"} />}\r\n      <Content>\r\n        <h1>Expense tracker</h1>\r\n        <p>Start managing your expenses with us</p>\r\n        <ButtonContainer>\r\n          <ButtonPrimary\r\n            marginRight=\"1em\"\r\n            onClick={() => {\r\n              history.push(\"/register\");\r\n            }}\r\n          >\r\n            Create account\r\n          </ButtonPrimary>\r\n          <ButtonSecondary\r\n            onClick={() => {\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            Log in\r\n          </ButtonSecondary>\r\n        </ButtonContainer>\r\n      </Content>\r\n\r\n      <HomeImg src={home} alt=\"Person managing his expenses\" />\r\n    </Container>\r\n  );\r\n}\r\n","import { Redirect, Route } from \"react-router\";\r\n\r\nexport default function PrivateRoute({ children, userAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        userAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { ButtonSecondary } from \"../buttons/Button\";\r\n\r\nexport default function LogoutButton() {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  console.log(isLoggedIn);\r\n\r\n  return (\r\n    isLoggedIn && (\r\n      <ButtonSecondary\r\n        onClick={() => {\r\n          dispatch(logout());\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        Log out\r\n      </ButtonSecondary>\r\n    )\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport LogoutButton from \"./LogoutButton\";\r\n\r\nconst MenuItem = styled(Link)`\r\n  text-decoration: none;\r\n  color: #002e63;\r\n  margin: 0 1em;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default function NavigationBar() {\r\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  return (\r\n    isLoggedIn && (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <MenuItem to=\"/dashboard\">ET</MenuItem>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <MenuItem to=\"/dashboard\">Dashboard</MenuItem>\r\n            <MenuItem to=\"/profile\">Profile</MenuItem>\r\n          </Nav>\r\n          <Nav className=\"ml-auto \">\r\n            <LogoutButton />\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  );\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport RegistrationView from \"./components/auth/RegistrationView\";\r\nimport LoginView from \"./components/auth/LoginView\";\r\nimport NewTransactionView from \"./components/transaction/NewTransactionView\";\r\nimport EditTransactionView from \"./components/transaction/EditTransactionView\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Profile from \"./components/profile/Profile\";\r\nimport HomeView from \"./components/home/HomeView\";\r\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\r\nimport NavigationBar from \"./components/navigation/NavigationBar\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const userAuthenticated = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <NavigationBar />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomeView />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginView />\r\n            </Route>\r\n            <PrivateRoute\r\n              path=\"/dashboard\"\r\n              userAuthenticated={userAuthenticated}\r\n            >\r\n              <Dashboard />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute path=\"/profile\" userAuthenticated={userAuthenticated}>\r\n              <Profile />\r\n            </PrivateRoute>\r\n\r\n            <Route path=\"/register\">\r\n              <RegistrationView />\r\n            </Route>\r\n\r\n            <PrivateRoute\r\n              path=\"/transactions/new\"\r\n              userAuthenticated={userAuthenticated}\r\n            >\r\n              <NewTransactionView />\r\n            </PrivateRoute>\r\n            <PrivateRoute\r\n              path=\"/transactions/edit/:id\"\r\n              userAuthenticated={userAuthenticated}\r\n            >\r\n              <EditTransactionView />\r\n            </PrivateRoute>\r\n\r\n            <Route path=\"*\">\r\n              <Redirect to=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAILURE,\r\n  LOGOUT,\r\n} from \"../actions/type\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case SIGNUP_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case SIGNIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case SIGNIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import authReducer from \"./auth\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst combinedReducers = combineReducers({ auth: authReducer });\r\n\r\nexport default combinedReducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport combinedReducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  combinedReducers,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}